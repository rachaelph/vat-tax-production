{
    "name": "LoadVATTargets_fromStaging",
    "properties": {
        "folder": {
            "name": "df_LakeDBLoad/OperationalMapped"
        },
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "linkedService": {
                        "referenceName": "LS_DataLake",
                        "type": "LinkedServiceReference"
                    },
                    "name": "VATTargets"
                },
                {
                    "name": "Customer"
                }
            ],
            "sinks": [
                {
                    "name": "VATTargetValues"
                }
            ],
            "transformations": [
                {
                    "name": "derivedColumn1"
                },
                {
                    "name": "join1"
                },
                {
                    "name": "filter1"
                },
                {
                    "name": "surrogateKey1"
                },
                {
                    "name": "select1"
                }
            ],
            "scriptLines": [
                "source(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false,",
                "     format: 'parquet',",
                "     fileSystem: 'staging',",
                "     wildcardPaths:['Tax/Undefined/VAT_Targets/*']) ~> VATTargets",
                "source(output(",
                "          CustomerId as long,",
                "          OriginalCustomerID as string,",
                "          CustomerEstablishedDate as date,",
                "          CustomerTypeId as integer,",
                "          ResponsibilityCenterId as integer,",
                "          LedgerId as integer,",
                "          LedgerAccountNumber as string,",
                "          CustomerNote as string,",
                "          PartyId as long,",
                "          GlobalLocationNumber as decimal(13,0)",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     store: 'synapse',",
                "     databaseType: 'spark',",
                "     format: 'table',",
                "     database: 'EnterpriseTaxModel',",
                "     tableName: 'Customer') ~> Customer",
                "surrogateKey1 derive({Month Year} = toDate({Month Year}),",
                "          VattargetId = toLong(VattargetId)) ~> derivedColumn1",
                "filter1, Customer join(TaxpayerID == OriginalCustomerID,",
                "     joinType:'inner',",
                "     matchType:'exact',",
                "     ignoreSpaces: false,",
                "     broadcast: 'auto')~> join1",
                "VATTargets filter(not(isNull(TaxpayerID))) ~> filter1",
                "join1 keyGenerate(output(VattargetId as long),",
                "     startAt: 1L,",
                "     stepValue: 1L) ~> surrogateKey1",
                "derivedColumn1 select(mapColumn(",
                "          VattargetId,",
                "          CustomerId,",
                "          TaxpayerId = TaxpayerID,",
                "          VATTarget = {VAT Target},",
                "          TargetDate = {Month Year},",
                "          TargetSector = Sector,",
                "          TargetState = State",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> select1",
                "select1 sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     store: 'synapse',",
                "     databaseType: 'spark',",
                "     format: 'table',",
                "     database: 'EnterpriseTaxModel',",
                "     tableName: 'VAT_Targets',",
                "     input(",
                "          VattargetId as long,",
                "          CustomerId as long,",
                "          TaxpayerId as string,",
                "          VATTarget as long,",
                "          TargetDate as date,",
                "          TargetSector as string,",
                "          TargetState as string",
                "     )) ~> VATTargetValues"
            ]
        }
    }
}