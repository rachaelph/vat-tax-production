{
    "name": "df_invoiceload_customer_fromStaging",
    "properties": {
        "description": "Maps data to the customer Table. Stores the TaxPayer ID from the Invoice.",
        "folder": {
            "name": "df_LakeDBLoad/OperationalMapped"
        },
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "linkedService": {
                        "referenceName": "LS_DataLake",
                        "type": "LinkedServiceReference"
                    },
                    "name": "FactInvoice"
                }
            ],
            "sinks": [
                {
                    "name": "Customer"
                }
            ],
            "transformations": [
                {
                    "name": "UniqueTaxID"
                },
                {
                    "name": "surrogateKeyCustomerID"
                },
                {
                    "name": "select5"
                },
                {
                    "name": "filter1"
                }
            ],
            "scriptLines": [
                "source(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false,",
                "     format: 'parquet',",
                "     fileSystem: 'staging',",
                "     wildcardPaths:['Tax/Undefined/Customer/*']) ~> FactInvoice",
                "filter1 aggregate(groupBy(TaxpayerID),",
                "     count = count(TaxpayerID)) ~> UniqueTaxID",
                "UniqueTaxID keyGenerate(output(CustomerID as long),",
                "     startAt: 1L,",
                "     stepValue: 1L) ~> surrogateKeyCustomerID",
                "surrogateKeyCustomerID select(mapColumn(",
                "          OriginalCustomerID = TaxpayerID,",
                "          CustomerId = CustomerID",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> select5",
                "FactInvoice filter(not(isNull(TaxpayerID))) ~> filter1",
                "select5 sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     store: 'synapse',",
                "     databaseType: 'spark',",
                "     format: 'table',",
                "     database: 'EnterpriseTaxModel',",
                "     tableName: 'Customer') ~> Customer"
            ]
        }
    }
}